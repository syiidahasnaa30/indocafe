{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-resto.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoints.js","webpack://restaurant-apps/./src/scripts/data/restaurant-data.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from \"idb\";\r\nimport CONFIG from \"../globals/config\";\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: \"id\" });\r\n  },\r\n});\r\n\r\nconst FavoriteResto = {\r\n  async getResto(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurant() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putResto(resto) {\r\n    if (!resto.hasOwnProperty(\"id\")) {\r\n      return;\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, resto);\r\n  },\r\n  async deleteResto(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async searchResto(query) {\r\n    return (await this.getAllRestaurant()).filter((restaurant) => {\r\n      const loweredRestoName = (restaurant.name || \"-\").toLowerCase();\r\n      const jammedRestoName = loweredRestoName.replace(/\\s/g, \"\");\r\n\r\n      const loweredCaseQuery = query.toLowerCase();\r\n      const jammedQuery = loweredCaseQuery.replace(/\\s/g, \"\");\r\n      return jammedRestoName.indexOf(jammedQuery) !== -1;\r\n    });\r\n  },\r\n};\r\nexport default FavoriteResto;\r\n","import CONFIG from \"./config\";\r\n\r\nconst API_ENDPOINT = {\r\n  RESTAURANTS: `${CONFIG.BASE_URL}list`,\r\n  detail: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n  search: (query) => `${CONFIG.BASE_URL}search?q=${query}`,\r\n  addReview: `${CONFIG.BASE_URL}review`,\r\n};\r\nexport default API_ENDPOINT;\r\n","import \"regenerator-runtime\";\r\nimport API_ENDPOINT from \"../globals/api-endpoints\";\r\n\r\nclass RestaurantData {\r\n  static async getRestaurants() {\r\n    const response = await fetch(API_ENDPOINT.RESTAURANTS);\r\n    const responseJSON = await response.json();\r\n    return responseJSON.restaurants;\r\n  }\r\n\r\n  static async detailResto(id) {\r\n    const response = await fetch(API_ENDPOINT.detail(id));\r\n    const responseJSON = await response.json();\r\n    return responseJSON.restaurant;\r\n  }\r\n\r\n  static async search(query) {\r\n    const response = await fetch(API_ENDPOINT.search(query));\r\n    const responseJSON = await response.json();\r\n    return responseJSON.restaurants;\r\n  }\r\n\r\n  static async addReview(review) {\r\n    try {\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\":\r\n            \"application/x-www-form-urlencoded | application/json\",\r\n        },\r\n        body: JSON.stringify(review),\r\n      };\r\n\r\n      const response = await fetch(API_ENDPOINT.addReview, options);\r\n      const responseJson = await response.json();\r\n      console.log(responseJSON);\r\n      return responseJson;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default RestaurantData;\r\n","const CONFIG = {\r\n  BASE_URL: \"https://restaurant-api.dicoding.dev/\",\r\n  BASE_IMAGE_URL: \"https://restaurant-api.dicoding.dev/images/small/\",\r\n  DEFAULT_LANGUAGE: \"en-us\",\r\n  CACHE_NAME: \"Resto-CatalogueV1\",\r\n  DATABASE_NAME: \"indocafe-database\",\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: \"restaurants\",\r\n};\r\nexport default CONFIG;\r\n","import \"regenerator-runtime\"; /* for async await transpile */\nimport \"../styles/main.css\";\nimport \"lazysizes\";\nimport \"lazysizes/plugins/parent-fit/ls.parent-fit\";\nimport App from \"./views/app\";\nimport swRegister from \"./utils/sw-register\";\nimport \"../styles/responsive.css\";\n\nconst app = new App({\n  button: document.querySelector(\"#menu\"),\n  drawer: document.querySelector(\"#drawer\"),\n  content: document.querySelector(\"main\"),\n});\n\nwindow.addEventListener(\"hashchange\", () => {\n  app.renderPage();\n});\n\nwindow.addEventListener(\"load\", () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","id","get","getAllRestaurant","getAll","putResto","resto","hasOwnProperty","put","deleteResto","searchResto","query","filter","restaurant","jammedRestoName","name","toLowerCase","replace","jammedQuery","indexOf","RESTAURANTS","detail","search","addReview","fetch","API_ENDPOINT","response","json","responseJSON","restaurants","review","options","method","headers","body","JSON","stringify","responseJson","console","log","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}